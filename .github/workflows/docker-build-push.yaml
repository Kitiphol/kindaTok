name: Build and Push Each Service

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Log in to GitHub Container Registry
        run: docker login ghcr.io -u Kitiphol --password ${{ secrets.GH_PAT }}

      # - name: Build the auth image
      #   working-directory: ./Backend/Authentication
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/authentication:latest
          
      # - name: Push the auth image
      #   run: | 
      #     docker push ghcr.io/kitiphol/authentication:latest

      # # Build & push UserService
      # - name: Build the userservice image
      #   working-directory: ./Backend/UserService
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/userservice:latest

      # - name: Push the userservice image
      #   run: |
      #     docker push ghcr.io/kitiphol/userservice:latest

      # - name: Build the videoservice image
      #   working-directory: ./Backend/VideoService
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/videoservice:latest

      # - name: Push the videoservice image
      #   run: |
      #     docker push ghcr.io/kitiphol/videoservice:latest

      # - name: Build the websocketservice image
      #   working-directory: ./Backend/WebsocketService
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/websocketservice:latest

      # - name: Push the websocketservice image
      #   run: |
      #     docker push ghcr.io/kitiphol/websocketservice:latest

      # - name: Build the videochunker image
      #   working-directory: ./Backend/VideoChunker
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/videochunker:latest

      # - name: Push the videochunker image
      #   run: |
      #     docker push ghcr.io/kitiphol/videochunker:latest

      # - name: Build the videoconvertor image
      #   working-directory: ./Backend/VideoConvertor
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/videoconvertor:latest

      # - name: Push the videoconvertor image
      #   run: |
      #     docker push ghcr.io/kitiphol/videoconvertor:latest

      # - name: Build the thumbnailmaker image
      #   working-directory: ./Backend/ThumbnailMaker
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/thumbnailmaker:latest

      # - name: Push the thumbnailmaker image
      #   run: |
      #     docker push ghcr.io/kitiphol/thumbnailmaker:latest

      # - name: Build the toktik-frontend image
      #   working-directory: ./frontend/toktik_frontend
      #   run: |
      #     docker build . --file ./Dockerfile \
      #     --tag ghcr.io/kitiphol/toktik-frontend:latest

      - name: Push the toktik-frontend image
        run: |
          docker push ghcr.io/kitiphol/toktik-frontend:latest







# name: Build and Push Each Service

# on:
#   push:
#     branches: [main]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest

#     permissions:
#       packages: write
#       contents: read

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to GitHub Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: Kitiphol
#           password: ${{ secrets.GH_PAT }}

#       # Build & push Authentication
#       - name: Build & push Authentication
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/Authentication
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/authentication:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/authentication:cache
#           cache-to: type=inline

#       # Build & push UserService
#       - name: Build & push UserService
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/UserService
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/userservice:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/userservice:cache
#           cache-to: type=inline

#       # Build & push VideoService
#       - name: Build & push VideoService
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/VideoService
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/videoservice:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/videoservice:cache
#           cache-to: type=inline

#       # Build & push WebsocketService
#       - name: Build & push WebsocketService
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/WebsocketService
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/websocketservice:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/websocketservice:cache
#           cache-to: type=inline

#       # Build & push VideoChunker
#       - name: Build & push VideoChunker
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/VideoChunker
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/videochunker:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/videochunker:cache
#           cache-to: type=inline

#       # Build & push VideoConvertor
#       - name: Build & push VideoConvertor
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/VideoConvertor
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/videoconvertor:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/videoconvertor:cache
#           cache-to: type=inline

#       # Build & push ThumbnailMaker
#       - name: Build & push ThumbnailMaker
#         uses: docker/build-push-action@v5
#         with:
#           context: ./Backend/ThumbnailMaker
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/thumbnailmaker:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/thumbnailmaker:cache
#           cache-to: type=inline

#       # Build & push Frontend
#       - name: Build & push Frontend
#         uses: docker/build-push-action@v5
#         with:
#           context: ./frontend/toktik_frontend
#           push: true
#           platforms: linux/amd64,linux/arm64
#           tags: ghcr.io/kitiphol/toktik-frontend:latest
#           cache-from: type=registry,ref=ghcr.io/kitiphol/toktik-frontend:cache
#           cache-to: type=inline

# i don't know why the above code is not working, but the below code works